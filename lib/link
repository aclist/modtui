#!/usr/bin/env bash
clean(){
	export mode=$2
	logger INFO "Started cleanup" silent
	readarray -t unlink < <(find "$1" -type l)
	readarray -t rename < <(find "$1" -type f -name "*modtui.bak")
	export de=${#unlink[@]}
	if [[ ${#unlink[@]} -gt 0 ]]; then
		pc(){
			echo "Cleaning file $2 of $de"
			unlink "$1"
			if [[ $mode == "silent" ]]; then
				clear
			fi
		}
		export -f pc
		printf "%s\n" "${unlink[@]}" | parallel -j200 pc {} {#}
	fi
	if [[ ${#rename[@]} -gt 0 ]]; then
		for (( i = 0; i < ${#rename[@]}; i++ )); do
			d=$(dirname "${rename[$i]}")
			oldname=$(basename "${rename[$i]}" .modtui.bak)
			echo [INFO] Restoring file $((i+1)) of ${#rename[@]}
			if [[ $mode == "silent" ]]; then
				clear
			fi
			mv "${rename[$i]}" "$d/$oldname"
		done
	fi
	logger INFO "Finished cleanup" loud
}
cleanup(){
	tput cnorm
	echo
	logger INFO "User exit"
	return 1
}
walk_tree(){
	tput civis
	export modroot="$1"
	export longmodpath="$2"
	local it="$3"
	local total="$4"
	[[ ! -d "$modroot" ]] && { logger WARN "Invalid path: '$path'" silent; let warn++; return 1; }
	realmodpath=$(realpath "$modroot/$longmodpath")
	shortmodpath=$(<<< "$longmodpath" awk -F/ '{print substr($0,index($0,$2))}')

	readarray -t files < <(find "$realmodpath"/* -type f)
	readarray -t dirs < <(find "$realmodpath"/* -type d \
		| awk -F"$modroot/$longmodpath/" '{print substr($0,index($0,$2))}' \
		| sed "s|^|$rootdir/|g")

	export it
	export total
	export modroot
	export longmodpath
	export dir_ct=${#dirs[@]}
	export file_ct=${#files[@]}
	link_dirs(){
		mkdir -p "$1"
		printf "Loading mod %i of %i, " "$it" "$total"
		printf "dir %i of %i\n" $2 $dir_ct
		clear

	}
	link_files(){
		local src="$1"
		local target=$(<<< "$1" awk -F"$modroot/$longmodpath/" '{print substr($0,index($0,$2))}' \
			| sed "s|^|$rootdir/|g")
		local ignore=$(basename "$target")
		if [[ $(grep -s "^$ignore$" $modtui_path/.modignore) ]]; then
			return
		fi
		if [[ -f "$target" ]] && [[ ! -L "$target" ]]; then
			mv "$target" "$target.modtui.bak"
		fi
		ln -s -f "$src" "$target"
		printf "Loading mod %i of %i, " "$it" "$total"
		printf "file %i of %i\n" $2 $file_ct
		clear
	}
	export -f link_dirs
	export -f link_files
	printf "%s\n" "${dirs[@]}" | parallel -j200 link_dirs {} {#}
	printf "%s\n" "${files[@]}" | parallel -j200 link_files {} {#}
	tput cnorm
}
load(){
	game="$1"
	export rootdir="$2"
	local moddir="$3"
	clean "$rootdir" silent

	shift 3

	local total_mods=$#
	local it=1
	warn=0
	for i in "$@" ; do
		walk_tree "$moddir" "$i" $it $total_mods
		[[ $? -eq 130 ]] && return 1
		let it++
	done
	logger INFO "Finished with ${warn} warnings" silent
}
"$@"
