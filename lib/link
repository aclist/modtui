#!/usr/bin/env bash
clean(){
	local path="$1"
	export mode=$2
	local game="$3"

	logger INFO "Started cleanup" silent
	readarray -t unlink < <(find "$path" -type l)
	readarray -t rename < <(find "$path" -type f -name "*modtui.bak")
	readarray -t empty < <(find "$path" -depth -type d -empty)
	export de=${#unlink[@]}
	if [[ ${#unlink[@]} -gt 0 ]]; then
		pc(){
			echo "Cleaning file $2 of $de"
			unlink "$1"
			if [[ $mode == "silent" ]]; then
				clear
			fi
		}
		export -f pc
		printf "%s\n" "${unlink[@]}" | parallel -j200 pc {} {#}
	fi
	if [[ ${#rename[@]} -gt 0 ]]; then
		for (( i = 0; i < ${#rename[@]}; i++ )); do
			d=$(dirname "${rename[$i]}")
			oldname=$(basename "${rename[$i]}" .modtui.bak)
			echo [INFO] Restoring file $((i+1)) of ${#rename[@]}
			if [[ $mode == "silent" ]]; then
				clear
			fi
			mv "${rename[$i]}" "$d/$oldname"
		done
	fi
#	TODO: stale dir rollback
#	if [[ ${#empty[@]} -gt 0 ]] && [[ -f $modtui_state/$game.rollback ]]; then
#		for (( i = 0; i < ${#empty[@]}; i++ )); do
#			if [[ -z $(grep "^${empty[$i]}$" $modtui_state/$game.rollback) ]]; then
#				rm -rf "${empty[$i]}"
#			fi
#		done
#	fi
	logger INFO "Finished cleanup" loud
}
cleanup(){
	tput cnorm
	echo
	logger INFO "User exit"
	return 1
}
walk_tree(){
	tput civis
	export modroot="$1"
	export longmodpath="$2"
	local it="$3"
	local total="$4"
	[[ ! -d "$modroot" ]] && { logger WARN "Invalid path: '$path'" silent; let warn++; return 1; }
	if [[ $longmodpath =~ /SELF= ]]; then
		local ep="${longmodpath#*SELF=}"
		longmodpath=${longmodpath/SELF=}
		cleanrootdir=$rootdir/$ep
	else
		cleanrootdir=$rootdir
	fi
	export cleanrootdir
	realmodpath=$(realpath "$modroot/$longmodpath")
	shortmodpath=$(<<< "$longmodpath" awk -F/ '{print substr($0,index($0,$2))}')

	readarray -t files < <(find "$realmodpath"/* -type f)
	readarray -t dirs < <(find "$realmodpath"/* -type d)

	export file_ct=${#files[@]}
	link_files(){
		local src="$1"
		local str="$modroot/$longmodpath/"
		local dest="${src/$str}"
		local dest="$cleanrootdir/$dest"
		local ignore=$(basename "$dest")
		for i in $(cat "$modtui_path/.modignore"); do
			[[ $ignore =~ $i ]] && return
		done
		if [[ -f "$dest" ]] && [[ ! -L "$dest" ]]; then
			mv "$dest" "$dest.modtui.bak"
		fi
		ln -s -f "$src" "$dest"
		printf "Loading mod %i of %i, " "$it" "$total"
		printf "file %i of %i\n" $2 $file_ct
		clear
	}
	for((i=0;i<${#dirs[@]};i++)); do
		src="${dirs[$i]}"
		str="$modroot/$longmodpath/"
		dest="${src/$str}"
		dest="$cleanrootdir/$dest"
		mkdir -p "$dest"
		printf "Loading mod %i of %i, " "$it" "$total"
		printf "dir %i of %i\n" "$i" "${#dirs[@]}"
		clear
	done
	export -f link_files
	printf "%s\n" "${files[@]}" | parallel -j200 link_files {} {#}
	tput cnorm
}
load(){
	game="$1"
	rootdir="$2"
	local moddir="$3"
	clean "$rootdir" silent "$game"

	shift 3

	local total_mods=$#
	local it=1
	warn=0
	for i in "$@" ; do
		walk_tree "$moddir" "$i" $it $total_mods
		[[ $? -eq 130 ]] && return 1
		let it++
	done
	logger INFO "Finished with ${warn} warnings" silent
}
"$@"
